// <auto-generated />
using System;
using FSLogistic.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FSLogistic.Domain.Migrations
{
    [DbContext(typeof(FreeShipLogisticResourceContext))]
    [Migration("20200716072057_AddSeedDataForBillTable")]
    partial class AddSeedDataForBillTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FSLogistic.Domain.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FSLogistic.Domain.Models.Autocomplete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Autocomplete");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = "132 Trường Chinh, Quận Tân Bình",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Data = "0912 321 251",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = "333 Trần Hưng Đạo, Quận 1",
                            Type = 1
                        });
                });

            modelBuilder.Entity("FSLogistic.Domain.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("AdvanceMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<DateTime>("DoneDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("StaffNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Address = "364 Cộng Hòa",
                            AdvanceMoney = 5000m,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            CustomerNote = "Hàng dễ bể",
                            District = 17,
                            DoneDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fee = 15000m,
                            PhoneNumber = "190029280",
                            ReceiverName = "Nguyễn Văn A",
                            StaffNote = "",
                            Status = 3,
                            Total = 220000m
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Address = "113 Nguyễn Thái Sơn",
                            AdvanceMoney = 5000m,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            CustomerNote = "Hàng dễ bể",
                            District = 15,
                            DoneDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fee = 15000m,
                            PhoneNumber = "190029280",
                            ReceiverName = "Nguyễn Văn B",
                            StaffNote = "",
                            Status = 3,
                            Total = 220000m
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Address = "364 Cộng Hòa",
                            AdvanceMoney = 5000m,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 16, 14, 20, 56, 888, DateTimeKind.Local).AddTicks(1128),
                            CustomerId = 2,
                            CustomerNote = "Hàng dễ bể",
                            District = 15,
                            DoneDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fee = 15000m,
                            PhoneNumber = "190029280",
                            ReceiverName = "Phạm Thị C",
                            StaffNote = "",
                            Status = 2,
                            Total = 220000m
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Address = "364 Điện Biên Phủ",
                            AdvanceMoney = 5000m,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 16, 14, 20, 56, 888, DateTimeKind.Local).AddTicks(1145),
                            CustomerId = 2,
                            CustomerNote = "Hàng dễ bể",
                            District = 1,
                            DoneDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fee = 15000m,
                            PhoneNumber = "190029280",
                            ReceiverName = "Trần Văn D",
                            StaffNote = "",
                            Status = 1,
                            Total = 220000m
                        });
                });

            modelBuilder.Entity("FSLogistic.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal?>("Q1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q8")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q9")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QBC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QBTH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QBTN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QCG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QHM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QNB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QPN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QTB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QTD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QTP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qcc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TranDan",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 16, 14, 20, 56, 884, DateTimeKind.Local).AddTicks(1447),
                            Name = "Trần Dần",
                            Q1 = 30000m,
                            Q10 = 30000m,
                            Q11 = 30000m,
                            Q12 = 30000m,
                            Q2 = 50000m,
                            Q3 = 30000m,
                            Q4 = 30000m,
                            Q5 = 30000m,
                            Q6 = 30000m,
                            Q7 = 30000m,
                            Q8 = 30000m,
                            Q9 = 30000m,
                            QBC = 30000m,
                            QBTH = 30000m,
                            QBTN = 30000m,
                            QCG = 30000m,
                            QGV = 30000m,
                            QHM = 30000m,
                            QNB = 30000m,
                            QPN = 30000m,
                            QTB = 30000m,
                            QTD = 30000m,
                            QTP = 30000m,
                            Qcc = 30000m
                        },
                        new
                        {
                            Id = 2,
                            Code = "Truong3Gio",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 16, 14, 20, 56, 886, DateTimeKind.Local).AddTicks(7657),
                            Name = "Trương Tam Phong",
                            Q1 = 30000m,
                            Q10 = 30000m,
                            Q11 = 30000m,
                            Q12 = 30000m,
                            Q2 = 50000m,
                            Q3 = 30000m,
                            Q4 = 30000m,
                            Q5 = 30000m,
                            Q6 = 30000m,
                            Q7 = 30000m,
                            Q8 = 30000m,
                            Q9 = 30000m,
                            QBC = 30000m,
                            QBTH = 30000m,
                            QBTN = 30000m,
                            QCG = 30000m,
                            QGV = 30000m,
                            QHM = 30000m,
                            QNB = 30000m,
                            QPN = 30000m,
                            QTB = 30000m,
                            QTD = 30000m,
                            QTP = 30000m,
                            Qcc = 30000m
                        });
                });

            modelBuilder.Entity("FSLogistic.Domain.Models.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Summary");
                });

            modelBuilder.Entity("FSLogistic.Domain.Models.Bill", b =>
                {
                    b.HasOne("FSLogistic.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FSLogistic.Domain.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
